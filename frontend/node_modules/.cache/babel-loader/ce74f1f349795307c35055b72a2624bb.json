{"ast":null,"code":"import axios from 'axios';\n\n// thêm module nhà sản xuất\n\nexport const getProducers = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let currentPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let price = arguments.length > 2 ? arguments[2] : undefined;\n  let category = arguments.length > 3 ? arguments[3] : undefined;\n  let rating = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: 'ALL_PRODUCTS_REQUEST'\n      });\n      let link = `/api/v1/producers?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n      if (category) {\n        link = `/api/v1/producers?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`;\n      }\n      const {\n        data\n      } = await axios.get(link);\n      dispatch({\n        type: 'ALL_PRODUCTS_SUCCESS',\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'ALL_PRODUCTS_FAIL',\n        payload: error.response.data.message\n      });\n    }\n  };\n};\nexport const newProducer = producerData => async dispatch => {\n  try {\n    dispatch({\n      type: 'NEW_PRODUCER_REQUEST'\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/admin/producer/new`, producerData, config);\n    dispatch({\n      type: 'NEW_PRODUCER_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'NEW_PRODUCER_FAIL',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getAdminProducers = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'ADMIN_PRODUCERS_REQUEST'\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/producers`);\n    dispatch({\n      type: 'ADMIN_PRODUCERS_SUCCESS',\n      payload: data.producers\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADMIN_PRODUCERS_FAIL',\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Delete product (Admin)\n// export const deleteProduct = (id) => async (dispatch) => {\n//     try {\n\n//         dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n//         const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n//         dispatch({\n//             type: DELETE_PRODUCT_SUCCESS,\n//             payload: data.success\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: DELETE_PRODUCT_FAIL,\n//             payload: error.response.data.message\n//         })\n//     }\n// }\n\n// // Update Product (ADMIN)\n// export const updateProduct = (id, productData) => async (dispatch) => {\n//     try {\n\n//         dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             }\n//         }\n\n//         const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n//         dispatch({\n//             type: UPDATE_PRODUCT_SUCCESS,\n//             payload: data.success\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: UPDATE_PRODUCT_FAIL,\n//             payload: error.response.data.message\n//         })\n//     }\n// }\n\n// export const getProductDetails = (id) => async (dispatch) => {\n//     try {\n\n//         dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n//         const { data } = await axios.get(`/api/v1/product/${id}`)\n\n//         dispatch({\n//             type: PRODUCT_DETAILS_SUCCESS,\n//             payload: data.product\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: PRODUCT_DETAILS_FAIL,\n//             payload: error.response.data.message\n//         })\n//     }\n// }\n\n// export const newReview = (reviewData) => async (dispatch) => {\n//     try {\n\n//         dispatch({ type: NEW_REVIEW_REQUEST })\n\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             }\n//         }\n\n//         const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n//         dispatch({\n//             type: NEW_REVIEW_SUCCESS,\n//             payload: data.success\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: NEW_REVIEW_FAIL,\n//             payload: error.response.data.message\n//         })\n//     }\n// }\n\n// export const getAdminProducts = () => async (dispatch) => {\n//     try {\n\n//         dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n//         const { data } = await axios.get(`/api/v1/admin/products`)\n\n//         dispatch({\n//             type: ADMIN_PRODUCTS_SUCCESS,\n//             payload: data.products\n//         })\n\n//     } catch (error) {\n\n//         dispatch({\n//             type: ADMIN_PRODUCTS_FAIL,\n//             payload: error.response.data.message\n//         })\n//     }\n// }\n\n// // Get product reviews\n// export const getProductReviews = (id) => async (dispatch) => {\n//     try {\n\n//         dispatch({ type: GET_REVIEWS_REQUEST })\n\n//         const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n//         dispatch({\n//             type: GET_REVIEWS_SUCCESS,\n//             payload: data.reviews\n//         })\n\n//     } catch (error) {\n\n//         dispatch({\n//             type: GET_REVIEWS_FAIL,\n//             payload: error.response.data.message\n//         })\n//     }\n// }\n\n// // Delete product review\n// export const deleteReview = (id, productId) => async (dispatch) => {\n//     try {\n\n//         dispatch({ type: DELETE_REVIEW_REQUEST })\n\n//         const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n//         dispatch({\n//             type: DELETE_REVIEW_SUCCESS,\n//             payload: data.success\n//         })\n\n//     } catch (error) {\n\n//         console.log(error.response);\n\n//         dispatch({\n//             type: DELETE_REVIEW_FAIL,\n//             payload: error.response.data.message\n//         })\n//     }\n// }\n\n// // Clear Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: 'CLEAR_ERRORS'\n  });\n};","map":{"version":3,"names":["axios","getProducers","keyword","arguments","length","undefined","currentPage","price","category","rating","dispatch","type","link","data","get","payload","error","response","message","newProducer","producerData","config","headers","post","getAdminProducers","producers","clearErrors"],"sources":["E:/web ban giay(TMDT)/web ban giay/frontend/src/actions/producerActions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// thêm module nhà sản xuất\r\n\r\nexport const getProducers = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: 'ALL_PRODUCTS_REQUEST' })\r\n\r\n        let link = `/api/v1/producers?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\r\n\r\n        if (category) {\r\n            link = `/api/v1/producers?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\r\n        }\r\n\r\n        const { data } = await axios.get(link)\r\n\r\n        dispatch({\r\n            type: 'ALL_PRODUCTS_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'ALL_PRODUCTS_FAIL',\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newProducer = (producerData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: 'NEW_PRODUCER_REQUEST' })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/admin/producer/new`, producerData, config)\r\n\r\n        dispatch({\r\n            type: 'NEW_PRODUCER_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'NEW_PRODUCER_FAIL',\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAdminProducers = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: 'ADMIN_PRODUCERS_REQUEST' })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/producers`)\r\n\r\n        dispatch({\r\n            type: 'ADMIN_PRODUCERS_SUCCESS',\r\n            payload: data.producers\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: 'ADMIN_PRODUCERS_FAIL',\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete product (Admin)\r\n// export const deleteProduct = (id) => async (dispatch) => {\r\n//     try {\r\n\r\n//         dispatch({ type: DELETE_PRODUCT_REQUEST })\r\n\r\n//         const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\r\n\r\n//         dispatch({\r\n//             type: DELETE_PRODUCT_SUCCESS,\r\n//             payload: data.success\r\n//         })\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: DELETE_PRODUCT_FAIL,\r\n//             payload: error.response.data.message\r\n//         })\r\n//     }\r\n// }\r\n\r\n// // Update Product (ADMIN)\r\n// export const updateProduct = (id, productData) => async (dispatch) => {\r\n//     try {\r\n\r\n//         dispatch({ type: UPDATE_PRODUCT_REQUEST })\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\r\n\r\n//         dispatch({\r\n//             type: UPDATE_PRODUCT_SUCCESS,\r\n//             payload: data.success\r\n//         })\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: UPDATE_PRODUCT_FAIL,\r\n//             payload: error.response.data.message\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export const getProductDetails = (id) => async (dispatch) => {\r\n//     try {\r\n\r\n//         dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n//         const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n//         dispatch({\r\n//             type: PRODUCT_DETAILS_SUCCESS,\r\n//             payload: data.product\r\n//         })\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: PRODUCT_DETAILS_FAIL,\r\n//             payload: error.response.data.message\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export const newReview = (reviewData) => async (dispatch) => {\r\n//     try {\r\n\r\n//         dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n//         dispatch({\r\n//             type: NEW_REVIEW_SUCCESS,\r\n//             payload: data.success\r\n//         })\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: NEW_REVIEW_FAIL,\r\n//             payload: error.response.data.message\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n// export const getAdminProducts = () => async (dispatch) => {\r\n//     try {\r\n\r\n//         dispatch({ type: ADMIN_PRODUCTS_REQUEST })\r\n\r\n//         const { data } = await axios.get(`/api/v1/admin/products`)\r\n\r\n//         dispatch({\r\n//             type: ADMIN_PRODUCTS_SUCCESS,\r\n//             payload: data.products\r\n//         })\r\n\r\n//     } catch (error) {\r\n\r\n//         dispatch({\r\n//             type: ADMIN_PRODUCTS_FAIL,\r\n//             payload: error.response.data.message\r\n//         })\r\n//     }\r\n// }\r\n\r\n// // Get product reviews\r\n// export const getProductReviews = (id) => async (dispatch) => {\r\n//     try {\r\n\r\n//         dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n//         const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n//         dispatch({\r\n//             type: GET_REVIEWS_SUCCESS,\r\n//             payload: data.reviews\r\n//         })\r\n\r\n//     } catch (error) {\r\n\r\n//         dispatch({\r\n//             type: GET_REVIEWS_FAIL,\r\n//             payload: error.response.data.message\r\n//         })\r\n//     }\r\n// }\r\n\r\n// // Delete product review\r\n// export const deleteReview = (id, productId) => async (dispatch) => {\r\n//     try {\r\n\r\n//         dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n//         const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\r\n\r\n//         dispatch({\r\n//             type: DELETE_REVIEW_SUCCESS,\r\n//             payload: data.success\r\n//         })\r\n\r\n//     } catch (error) {\r\n\r\n//         console.log(error.response);\r\n\r\n//         dispatch({\r\n//             type: DELETE_REVIEW_FAIL,\r\n//             payload: error.response.data.message\r\n//         })\r\n//     }\r\n// }\r\n\r\n// // Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: 'CLEAR_ERRORS'\r\n    })\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA,OAAO,MAAMC,YAAY,GAAG,SAAAA,CAAA;EAAA,IAACC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,WAAW,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEI,KAAK,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAA,IAAEG,QAAQ,GAAAL,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAA,IAAEI,MAAM,GAAAN,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,OAAK,MAAOO,QAAQ,IAAK;IAC5G,IAAI;MAEAA,QAAQ,CAAC;QAAEC,IAAI,EAAE;MAAuB,CAAC,CAAC;MAE1C,IAAIC,IAAI,GAAI,6BAA4BV,OAAQ,SAAQI,WAAY,eAAcC,KAAK,CAAC,CAAC,CAAE,eAAcA,KAAK,CAAC,CAAC,CAAE,iBAAgBE,MAAO,EAAC;MAE1I,IAAID,QAAQ,EAAE;QACVI,IAAI,GAAI,6BAA4BV,OAAQ,SAAQI,WAAY,eAAcC,KAAK,CAAC,CAAC,CAAE,eAAcA,KAAK,CAAC,CAAC,CAAE,aAAYC,QAAS,iBAAgBC,MAAO,EAAC;MAC/J;MAEA,MAAM;QAAEI;MAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACF,IAAI,CAAC;MAEtCF,QAAQ,CAAC;QACLC,IAAI,EAAE,sBAAsB;QAC5BI,OAAO,EAAEF;MACb,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZN,QAAQ,CAAC;QACLC,IAAI,EAAE,mBAAmB;QACzBI,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;MACjC,CAAC,CAAC;IACN;EACJ,CAAC;AAAA;AAED,OAAO,MAAMC,WAAW,GAAIC,YAAY,IAAK,MAAOV,QAAQ,IAAK;EAC7D,IAAI;IAEAA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAuB,CAAC,CAAC;IAE1C,MAAMU,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAM;MAAET;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACuB,IAAI,CAAE,4BAA2B,EAAEH,YAAY,EAAEC,MAAM,CAAC;IAErFX,QAAQ,CAAC;MACLC,IAAI,EAAE,sBAAsB;MAC5BI,OAAO,EAAEF;IACb,CAAC,CAAC;EAEN,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZN,QAAQ,CAAC;MACLC,IAAI,EAAE,mBAAmB;MACzBI,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMM,iBAAiB,GAAGA,CAAA,KAAM,MAAOd,QAAQ,IAAK;EACvD,IAAI;IAEAA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAA0B,CAAC,CAAC;IAE7C,MAAM;MAAEE;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,yBAAwB,CAAC;IAE3DJ,QAAQ,CAAC;MACLC,IAAI,EAAE,yBAAyB;MAC/BI,OAAO,EAAEF,IAAI,CAACY;IAClB,CAAC,CAAC;EAEN,CAAC,CAAC,OAAOT,KAAK,EAAE;IAEZN,QAAQ,CAAC;MACLC,IAAI,EAAE,sBAAsB;MAC5BI,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMQ,WAAW,GAAGA,CAAA,KAAM,MAAOhB,QAAQ,IAAK;EACjDA,QAAQ,CAAC;IACLC,IAAI,EAAE;EACV,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module"}